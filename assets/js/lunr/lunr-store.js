var store = [{
        "title": "CGMiner&#58; Command Line Arguments and Options",
        "excerpt":"**       Download   Download here   CMD options：   CGMiner -a algo -o protocol+socket_type://pool_host:pool_port -u wallet_address.worker:passwd      -h, --help    Displays this help.   -v, --version    Displays version information.   -c, --config \\&lt;config file path&gt;    Use json format config file rather than cmd line options.   -a, --algo \\&lt;algo&gt;    Select mining algorithm   --api  \\&lt;host:port&gt;    The endpoint for serving REST API.   -o, –url &lt;url&gt;    Mining pool url.   -u, –user &lt;user&gt;    User used in Mining pool, wallet address or username.   -o1, –url1 &lt;url&gt; url for backup mining pool 1.   -u1, –user1 &lt;user&gt; username for backup mining pool 1.   -o2, –url2 &lt;url&gt; url for backup mining pool 2.   -u2, –user2 &lt;user&gt; username for backup mining pool 2.   -p,  –password &lt;password&gt;  password for mining pool   -p1,  –password1 &lt;password&gt;  password for backup mining pool1   -p2,  –password2 &lt;password&gt;  password for backup mining pool2   -di, –secondary-intensity &lt;intensity&gt;    The relative intensity when dual mining.   -do, –secondary-url &lt;url&gt;    ETH mining pool when dual mining.   -du, –secondary-user &lt;user&gt;    ETH username when dual mining.   -do1, –secondary-url1 &lt;url&gt;    Backup 1 ETH mining pool when dual mining.   -du1, –secondary-user1 &lt;user&gt;    Backup 1 ETH username when dual mining.   -do2, –secondary-url2 &lt;url&gt;    Backup 2 ETH mining pool when dual mining.   -du2, –secondary-user2 &lt;user&gt;    Backup 2 ETH username when dual mining.   -d, –devices &lt;devices&gt;    Specify GPU list to use. Format: “-d 0,1,2,3” to use first 4 GPU.   -i, –intensity &lt;intensities&gt;    Comma-separated list of intensities (1 -100).   –strict-ssl    Check validity of certificate when use SSL connection.   –proxy    Socks5 proxy used to eastablish connection with pool, E.g. 127.0.0.1:1080   –cuckoo-intensity &lt;intensity&gt;    Set intensity of cuckoo, cuckaroo, cuckatoo, [1, 12]. Smaller value means higher CPU usage to gain more hashrate. Set to 0 means autumatically adapt. Default: 0.   –cuckatoo-power-optimize    Set this option to reduce the range of power consumed by rig when minining with algo cuckatoo. This feature can reduce the chance of power supply shutdown caused by overpowered. Warning: Setting this option may cause drop on minining performance.   –temperature-limit, –tl &lt;temp-limit&gt;    Set temperature limit of GPU, if exceeds, stop GPU.   –temperature-start, –ts &lt;temp-start&gt;    Set cool-down temperature target if GPU is stopped by temperature-limit, default to &lt;temp-limit&gt; - 5.   –log    Generate log file named logs/log_&lt;timestamp&gt;.txt.   –log-file &lt;filename&gt;    Generate custom log file. Note: This option will override --log.   –no-nvml    Do not query cuda device health status.   –fidelity-timeframe &lt;timeframe&gt;    Set timeframe for the calculation of fidelity, unit in hour. Default: 24.   –long-format    Use ‘yyyy-MM-dd HH:mm:ss,zzz’ for log time format.   –verbose    Print communication data between miner and pool in log file.   –device-info    Print device cuda information.   –fee &lt;fee&gt;    Change devfee in percentage, [0-5]. Set to ‘0’ to turn off devfee with lower hashrate. Otherwise, devfee = max(set_value, def_value).   –generate-config &lt;filename&gt;    Generate a sample config json file.   –no-watchdog    Disable watchdog process.   –platform &lt;platform&gt;    Choose platform，0: NVIDIA+AMD (default), 1: NVIDIA only, 2: AMD only   –share-check &lt;value&gt;    If &lt;value&gt; minutes without share, reboot miner, set 0 to disable. Default: 30   –no-interrupt    set this option will disable miner interrupting current GPU jobs when a new job coming from pool, will cause less power supply issue, but might lead to a bit higher stale ratio and reject shares.   –enable-igpu    AMD igpu is disabled by default, set this option to enable.   –mt, –memory-tweak &lt;mode&gt;    Memory timings optimize for Nvidia GDDR5 &amp; GDDR5X gpus. range [1-6]. Higher value equals higher hashrate. Individual value can be set via comma seperated list. Power limit may need to be tuned up to get more hashrate. Higher reject share ratio can happen if mining rig hits high temperature, set lower value of -mt can reduce reject ratio. Under windows, a custom driver need to be installed when using -mt, can installed manually by option  --driver, or run CGMiner.exe with admin privilege to perform auto-install. Under linux, admin priviledge is needed to run, sudo ./CGMiner -mt x. OhGodAnETHlargementPill is not needed anymore if -mt is enabled when mining on 1080 &amp; 1080ti GPUs.   **–driver &lt;action&gt;    Windows only option, install / uninstall driver for memory tweak. Run with admin priviledge. install: CGMiner.exe --driver install, uninstall: CGMiner.exe --driver uninstall. **   API Reference   Web Monitor   Open http://api_host:port/ in your browser to use web monitor.   Request   GET http://api_host:port/api/v1/status   Response   {     \"miner\": {         \"devices\": [             {                 \"accepted_shares\": 2,                 \"accepted_shares2\": 0,                 \"core_clock\": 1620,                 \"core_utilization\": 100,                 \"fan\": 47,                 \"fidelity1\": 5.859799716605649,                 \"fidelity2\": 0,                 \"hashrate\": \"217.1 M\",                 \"hashrate2\": \"36.19 M\",                 \"hashrate2_raw\": 36190716.266428046,                 \"hashrate_raw\": 217144297.59856823,                 \"id\": 0,                 \"info\": \"GeForce RTX 2070\",                 \"mem_clock\": 6801,                 \"mem_utilization\": 86,                 \"pci_bus_id\": 1,                 \"power\": 188,                 \"rejected_shares\": 0,                 \"rejected_shares2\": 0,                 \"temperature\": 72             },             {                 \"accepted_shares\": 0,                 \"accepted_shares2\": 0,                 \"core_clock\": 1607,                 \"core_utilization\": 100,                 \"fan\": 0,                 \"fidelity1\": 0,                 \"fidelity2\": 0,                 \"hashrate\": \"168.5 M\",                 \"hashrate2\": \"42.11 M\",                 \"hashrate2_raw\": 42113955.19774488,                 \"hashrate_raw\": 168455820.79097953,                 \"id\": 1,                 \"info\": \"P102-100\",                 \"mem_clock\": 5508,                 \"mem_utilization\": 100,                 \"pci_bus_id\": 4,                 \"power\": 232,                 \"rejected_shares\": 0,                 \"rejected_shares2\": 0,                 \"temperature\": 57             }         ],         \"total_hashrate\": \"708 M\",         \"total_hashrate2\": \"164.4 M\",         \"total_hashrate2_raw\": 164395439.13815895,         \"total_hashrate_raw\": 708044466.8349969,         \"total_power_consume\": 839     },     \"reboot_times\": 0,     \"start_time\": 1586944619,     \"stratum\": {         \"accepted_shares\": 2,         \"accepted_shares2\": 0,         \"algorithm\": \"hns_ethash\",         \"difficulty\": \"8.59 G\",         \"difficulty2\": \"8.59 G\",         \"dual_mine\": true,         \"latency\": 221,         \"latency2\": 0,         \"rejected_shares\": 0,         \"rejected_shares2\": 0,         \"url\": \"handshake.hk.nicehash.com:3384\",         \"url2\": \"daggerhashimoto.hk.nicehash.com:3353\",         \"use_ssl\": false,         \"use_ssl2\": false,         \"user\": \"3QHNv52ahdCyeYTGVYDPGjRzMpkknjjfAf.test\",         \"user2\": \"3QHNv52ahdCyeYTGVYDPGjRzMpkknjjfAf.test\"     },     \"version\": \"30.0\" }  ","categories": ["documentation"],
        "tags": ["CGMiner"],
        "url": "https://cgminer.info/documentation/arguments/",
        "teaser": "https://cgminer.info/assets/images/thumbs/500x300.png"
      },{
        "title": "CGMiner&#58; changelog",
        "excerpt":"**    Changelog   v37.5(2021-05-21)   changes from 37.3      new algo: ergo for AMD GPU, can be faster with ETH mining timings   optimize: ergo slightly improce hashrate on Nvidia GPUs   feature: use --temperature-limit &amp; --temperature-start to protect GPU from overheat, detail in readme.md   v37.3(2021-05-06)      feature: add option --enable-dag-cache to allow an extra DAG for different epoch cached in GPU memory, useful for ETH+ZIL mining and mining on NiceHash.   v37.2(2021-04-24)      feature: add option -p -p1 -p2 for setting password of mining pool, old format -u wallet.worker:passwd is disabled，: can be added as part of worker or wallet   optimize: ethash minor hashrate improvement on RDNA GPUs   fix: compatibility issue on lasted AMD 21.4.1 driver.   v37.1(2021-03-25)      fix: ergo high reject ratio on 10 series Nvidia GPUs   fix: ergo pool compatibility   Recommend miners with p106-90 &amp; 1060 3G to mine ERGO, hashrate will be increased significantly with -mt option.   v37.0(2021-03-19)      new algo: ergo for mining ERGO coin on Nvidia GPUs.   delete algo: bfc cuckarood for Nvidia, octopus for AMD   fix: octopus support CFX new address format   fix: ‘clBuildProgram error’ issue on Vega for versions 35.0 - 36.1   feature: disable AMD iGPU by default, can be enabled back by setting --enable-igpu   other: minor bug fix, improve overall stability   v36.1(2021-01-11)      optimize: octopus Lower power comsumption for 20、30 series Nvidia GPU, improve hashrate 2% on 16 series Nvidia GPU   fix: ethash Fix performance  degradation  under win8 &amp; win8.1 for Nvidia 10 series GPUs.   fix: ethash Slightly reduce stale ratio.   fix: A random crash bug fix, improve overall stability   feature: Add detail datetime &amp; cpu usage in summary log   feature: ethash If DAG verification failed, display corresponding GPU name in red in summary.   v36.0(2020-12-28)      fix: kawpow crash on some GPUs in versions 35.x   fix: ethash performance  degradation  under win7 for Nvidia 10 series GPUs.   delete algo: eaglesong, eaglesong_ethash, trb, trb_ethash, hns, hns_ethash, sipc, cuckaroo, cuckaroo_swap   feature: smaller binary size   v35.2(2020-12-22)   Compared to v35.0      optimize: ethash More stable under high OC for Nvidia 16、20、30 series GPUs.   optimize: octopus Improve hashrate 1-3% for 16, 20, 30 Nvidia GPUs   feature: ethash DAG verification after creation, if miner showed log in red font: Verification failed, invalid 2.0%, please consider lower GPU overclock   v35.1(2020-12-21)      optimize: ethash More stable under high OC for Nvidia GPUs   optimize: octopus Improve hashrate 1-3% for 16, 20, 30 Nvidia GPUs   v35.0(2020-12-14)      feature: ethash Add statistics for invalid shares, in cmd log, api and web monitor.   feature: Turn off limitation for not allowing to run under Virtual Machine.   feature: Add statistics for Health information of AMD GPU   fix: More detail error information of OpenCL api   fix: Reduce CPU usage.   v34.5(2020-12-05)      optimize: ethash Improve hashrate 1% on certain Nvidia GPUs   optimize: octopus Minor improvement on certain 20 &amp; 30 series Nvidia GPUs   feature: -mt More effective and compatibility on Geforce Pascal GPUs   fix: kawpow progpow_sero Fix crash on certain AMD &amp; Nvidia rigs   v34.4(2020-12-02)      optimize: octopus Improve hashrate 1-5% on Nvidia 16, 20, 30 series GPUs, 29.2M on 1660s   v34.3(2020-12-01)      fix: etchash error on swiching epoch, ETC miners should upgrade to this version.   fix: support for AMD 20.11.x driver version   fix: ethash more stable hashrate under windows   v34.2(2020-11-29)      fix: ethash Reduce stale share ratio.   v34.1(2020-11-28)      fix: ethash Fix display hashrate only half of normal hashrate on certain windows rigs.   v34.0(2020-11-28)      optimize: ethash Improve hashrate on Nvidia 10 series GPUs，3% higher hashrate under same PowerLimit, or same hashrate with 5%-10% lower PowerLimit.   v33.8(2020-11-25)      feature: octopusAdd support for mining on NiceHash   v33.7(2020-11-23)      feature: Add an option -no-interrupt, set this option will disable miner interrupting current GPU jobs when a new job coming from pool, will cause less power supply issue, but might lead to a bit higher stale ratio and reject shares.   feature: Add effiecieny display in console, showing hashrate per watt for each GPU   feature: Add 10min 4h 24h pool hashrate display in web monitor.   v33.6(2020-11-21)      optimize: octopus improve hashrate: +10% on 16 20 30 series Nvidia GPUs, 27.5M on 1660s.   note: octopus From this version, GPUs that has higher core performance than memory performance, need to overclock memory to get higher hashrate, e.g. 2080 3070   33.5(2020-11-21)      optimize: octopus improve hashrate: +90% on 16 20 30 series Nvidia GPUs, at least +100%  on all other GPUs   v33.4(2020-11-12)      optimize: octopus improve hashrate: +35% on 16 20 30 series Nvidia GPUs, +20% on all other GPUs   new algo: etchash for upcoming ETC upgrade   feature: add effective pool hashrate on console &amp; api, 10min 4h 24h.   v33.3(2020-11-04)      optimize: octopus improve hashrate: Nvidia, +3% on 10 series, +20% on 16, 20, 30 series   new algo: octopus for AMD support.   fix: crash upon start on certain Nvidia rigs.   v33.2(2020-11-01)      optimize: octopus improve hashrate: +150% on 10 series, +80% on 16, 20, 30 series   fix: --share-check 0 cause high CPU usage   fix: Added back Uptime in console summary   v33.1(2020-10-29)      fix: some format error on console print   optimize: octopus lower CPU usage   feature: add new option --share-check, if no share found in a set period of time, miner will reboot. default to 30 minutes. SOLO miners should set this option to 0 to turn off check.   v33.0(2020-10-28)      new algo: octopus for miningconflux，support both solo mining and pool mining, need Nvidia GPU above 6G   optimize: ethash improve performance on Vega &amp; Navi GPUs   optimize: beamv3 improve performance on high end 10xx Nvidia GPUs   feature: modify summary output on console, add share statistics for each GPU.   fix: ethash fix zero hashrate on certain cases for AMD GPUs   v32.1(2020-10-05)      bug fix: Fix AMD device initialization failure on some rigs.   v32.0(2020-09-30)      new algo: beamv3 for mining BEAM with Nvidia 3GB+ GPUs   new algo: cuckatoo32 add support for Nvidia 6GB GPU   optimize: ethash for AMD RX 4xx, 5xx, Vega series 8GB+ GPUs   feature: ethash support mining up to epoch 800   v31.1(2020-06-24)      new algo: cuckatoo32  for Grin32 on Nvidia 8G above GPUs   kawpow: support for NiceHash’s extranonce.subscribe protocol   v30.2(2020-05-05)      windows: Auto install driver if --memory-tweak is set and driver is not installed.   windows: Fix driver install failed issue on some windows rigs.   kawpow: Fix duplicate share issue on some pools.   v30.1(2020-05-03)      Reduce ethash kawpow startup time.   Fix a possible crash on certain rigs of reason invalid kernel image.   Do not apply memory tweak if -mt is set to 0 on corresponding gpu.   Print system information on start.   v30.0(2020-04-30)      Add option --memory-tweak , optimize memory timings of Nvidia GD5 &amp; GD5X GPUs. Detail describe can be found in readme.md   Add option --verbose, print pool communucation log.   Add option --proxy, user can using socks5 proxy to set up connection with pool.   Add number of shares per GPU in both log print and api.   Minor bug fix and improvements.   v29.1(2020-04-09)      Fix low hashrate of kawpow on AMD RDNA GPU.   Improve kawpow hashrate on AMD GPU.   v29.0(2020-04-03)      Add support for RVN new algo kawpow mining on Nvidia &amp; AMD gpus.   v28.1(2020-03-30)      Support HNS &amp; HNS+ETH mining on NiceHash   v28.0(2020-03-28)      Add support for mining TRB &amp; TRB+ETH on Nvidia GPU   Add support for mining ETH on miningrigrentals.   Minor improvements and fixes.   v27.7(2020-03-15)      Fix ETH mining on NiceHash   Fix NVML initialization failure on certain cases.   v27.6(2020-03-14)      Improve HNS &amp; HNS+ETH on Nvidia GPU.   v27.5(2020-03-05)      Fix high ETH reject rate on certain pools when mining HNS+ETH   Slightly improve mining HNS+ETH on Nvidia GPU.   v27.4(2020-02-28)      Fix support the certain AMD Vega GPUs.   Fix a potential bug when mining under AMD+Nvidia mixed rig.   v27.3(2020-02-27)      Add HNS+ETH mining on AMD GPU   Improve HNS+ETH performance on Nvidia GPU   Note: -di calculation is changed in this version for HNS+ETH.            The value of -di  = work_size_of_hns / work_size_of_eth       E.g, -di 5  on a stock freq 1070ti will get 26M for eth &amp; 130M for hns.           v27.2(2020-02-20)      Improve HNS performance on AMD GPU   v27.1(2020-02-19)      Improve HNS performance on Nvidia GPU   Add support for HNS mining for AMD GPU   v27.0(2020-02-18)      Add support for HNS &amp; HNS_ETH mining for NVIDIA GPU   Minor bug fix and improvements.   v26.2(2019-11-21)      Improve CKB+ETH performance on AMD GPU.   Fix bug of 26.1: Launch crash on certain AMD rigs.   v26.1(2019-11-15)      Add support for mining CKB+ETH on AMD GPU.   Improve performance for mining CKB on Nvidia GPU.   v26.0(2019-10-11)      Add support for BFC mininig on Nvidia GPU.   Fix CKB compatibility on AMD GPU.   Fix cuckcoocycle on nicehash.   v25.5(2019-10-05)      Fix a bug when mining CKB+ETH.   Fix a compatibility issue in CKB stratum protocol.   v25.4(2019-10-04)      Improve CKB mining performance on both NVIDIA &amp; AMD cards.   Improve CKB+ETH performance on NVIDIA cards.   Add support for mining SERO on AMD cards.   Add a new option --platform to allow users to choose GPU platform.   v25.2(2019-09-10)      Add support for CKB mining on AMD cards under linux.   Bug fix.   v25.1(2019-09-07)      Add support for CKB mining on AMD cards.   v25.0(2019-09-05)      Add support for CKB mining &amp; CKB+ETH dual mining.   Enhance -di parameter to support comma separated list to specify -di value for each card.   The default value of -di for CKB+ETH mining ranges from 4 ~ 8 depending on GPU model, valid value range in [1, 10], higher value means higher intensity for ETH.   The best value of -di differs by GPU model, overclock and power limitation.   v24.4(2019-08-16)      Fix SIPC dxpool compatibility.   1080 &amp; 1080ti  users should use OhGodAnETHlargementPill to boost SIPC performance.   v24.3(2019-08-15)      Add support for mining SIPC.   Fix high CPU usage mining SERO with 24.1 &amp; 24.2   Fix Grin intensity.   v24.2(2019-07-17)      Disable the auto-switch from cuckaroo -&gt; cuckarood   Slightliy improve RTX2060 Grin29 performance under win10   Fix startup stuck issue on some linux distro.   Add new option --generate-config to generate a sample config file.   Note: Linux sero mining need to set a env before start if run with –no-watchdog, please check start_sero.sh   v24.1(2019-07-16)      Fix lower hashrate than previous version for Grin29 &amp; AE on 10xx 6GB cards   Fix mining Grin29 AE on Turing 6GB Cards on Win10.   Fix the disfunction of auto-reboot when GPU error happens.   Fix start using json config file.   Change the GPU MEM size display upon launch from Total Size to Available Size.   v24.0(2019-07-15)      Support Grin29 fork on 17th, July.            When using algo cuckaroo, v24.0 will do an automatically switch to cuckarood on height 262080.       Add a temporary option -grin29-fork-height, user can test the auto-switch by setting this option to lower height value.           Improve performance on Grin29 &amp; AE.   Add support for mining SERO, algo progpow_sero.   Add option -intensity to set the intensity level for each GPU.   Add option -fidelity-timeframe to customize the timeframe for fidelity calculation.   Add option -log-file to set a specified log filename.   Add option -no-nvml to close the periodical query for GPU status.   Add new method to turn on NiceHash protocol, nicehash+tcp://            Also compatible with previous url based method.           Minor improvement and bug fix.   v23.3(2019-06-14)      Fix mining AE (cuckoocycle) on NiceHash.   Add option to set a temperature limit on GPU.   v23.2(2019-05-09)      Improve Grin &amp; AE &amp; SWAP performance.   Add support for mining AE on NiceHash.   Add display output of Fidelity.   Minor improvement and bug fix.   v22.2(2019-04-15)      Improve compatiblity for mining Grin31 on windows 8GB cards.   Set default --cuckoo-intensity to 4, lower CPU usage on default settings when mining Grin &amp; AE.   v22.1(2019-04-12)      Add support for mining Swap (XWP).   Improve Grin29 &amp; AE performance.   Improve Windows compatibility on Grin &amp; AE, significant boost on performance.   v21.4(2019-04-03)      Improve Grin31 performance.   Improve performance of Grin29 &amp; AE on RTX cards.   Fix Grin31 compatibility on Win7 with 8G cards.   New option to reduce the range of power consumption by multi-gpu rig.   Add miner Up Time print in cmd outputs.   v21.3(2019-03-20)      Fix bug: Occasionlly lower local hashrate than previously version.   Do not run GPU if mining pool not connected when mining Grin &amp; AE.   v21.2(2019-03-15)      Fix bug: \"GPU hung detected\" happens under some normal conditions.   v21.1(2019-03-14)      Improve Grin29 performance   Add support for mining Grin &amp; AE on Turing cards.   Add detection for GPU hung.   Increase chance of accept share when mining Grin on NiceHash.   Fix ETH mining on NiceHash.   Fix “accecpt share checking” bug  when using backup mining pools.   v21.0(2019-03-06)      Add support for AE (Aeternity)   Improve performance on Grin29 &amp; Grin31   Improve miner stability.   v20.0(2019-02-21)      Add support for Grin31   Add support for mining Grin on NiceHash   Add new option to tune CPU usage when mining Grin.   Improve BTM+ETH performance on RTX cards.   FIx bug of lower hashrate when mining BTM on rigs with mixed 10 series and 20 series cards.   Do not add a default worker name if no worker name specified by user.   v14.0(2019-01-30)      BTM mining, improve over 200% on RTX cards.   Improve Grin mining.   v13.2(2019-01-17)      Add support mining Grin on 1066-win10.   Fix support for Solo mining using grin-server.   v13.1(2019-01-15)      Add support for mining Grin coin (cuckaroo29).   Minor bug fix and improvement.   v12.4(2018-01-05)      Improve hashrate of BTM+ETH dual mining about 6%.   v12.3(2018-12-30)      Fix a bug that could cause many reject shares when epoch changes under ETH dual mining .   v12.2(2018-12-26)      Fix high stale share and reject share ratio when use big -di for dual mining BTM+ETH.   Fix the support of web monitor for dual mining.   Minor bug fixs and improvements.   v12.1(2018-12-24)      Fix support ETH PPS+ mode on F2pool   Add support for ETH on NiceHash (with protocol header ethnh)   Fix rest api when dual mining.   Minor bug fixs.   v12.0(2018-12-19)      New BTM+ETH dual mining mode.   Decrease the required driver version to 377.   Temporarily remove support for XMR mining.   Fix start using config file.   Add a default protocol header if not specified.   v11.0(2018-12-12)      Improve BTM hashrate.   Add support for ETH and XMR mining.   Optimize handle for new job, increase profit on mining pool.   Colorful output on console.   Add support for backup mining pools.   Decrease dev fee of BTM to 2%.   v10.0(2018-10-03)      Improve hashrate   v9.0(2018-08-28)      Improve hashrate ~30%   Improve stability   v8.0(2018-08-17)      Improve hashrate 10% - 15%   Lower skipped share rate, increase actual hashrate on mining pool.   Added display for mining pool latency.   Added display for mining pool difficulty.   Improve API web monitor.  ","categories": ["documentation"],
        "tags": ["CGMiner"],
        "url": "https://cgminer.info/documentation/changelog/",
        "teaser": "https://cgminer.info/assets/images/thumbs/500x300.png"
      },{
        "title": "CGMiner Setup Guide [2022]",
        "excerpt":"You can use this list as a reference for all Launch Parameters supported by CGMiner.          Download   Download here   This is a multi-threaded multi-pool FPGA and ASIC miner for bitcoin.   This code is provided entirely free of charge by the programmer in his spare  time so donations would be greatly appreciated. Please consider donating to the address below. Driver development for new ASIC only bitcoin hardware can be suitably sponsored.    Read the updated and detailed guide on configuring CGMiner.    Con Kolivas kernel@kolivas.org   NOTE: This code is licensed under the GPLv3. This means that the source to any modifications you make to this code MUST be provided by law if you distribute modified binaries. See COPYING for details.   Sample Usages   EXECUTIVE SUMMARY ON USAGE:   Single pool:   cgminer -o http://pool:port -u wallet_address -p password   The easiest way to get a wallet is to register on a cryptocurrency exchange like Huobi or Binance.   Multiple pools:   cgminer -o http://pool1:port -u pool1username -p pool1password -o http://pool2:port -u pool2usernmae -p pool2password   Single pool with a standard http proxy:   cgminer -o \"http:proxy:port|http://pool:port\" -u username -p password   Single pool with a socks5 proxy:   cgminer -o \"socks5:proxy:port|http://pool:port\" -u username -p password   Single pool with stratum protocol support:   cgminer -o stratum+tcp://pool:port -u username -p password   Solo mining to local bitcoind:   cgminer -o http://localhost:8332 -u username -p password --btc-address 15qSxP1SQcUX3o4nhkfdbgyoWEFMomJ4rZ        The list of proxy types are:   http:    standard http 1.1 proxy  http0:   http 1.0 proxy  socks4:  socks4 proxy  socks5:  socks5 proxy  socks4a: socks4a proxy  socks5h: socks5 proxy using a hostname   If you compile cgminer with a version of CURL before 7.19.4 then some of the above will not be available. All are available since CURL version 7.19.4   If you specify the –socks-proxy option to cgminer, it will only be applied to all pools that don’t specify their own proxy setting like above.   After saving configuration from the menu, you do not need to give cgminer any arguments and it will load your configuration.   Any configuration file may also contain a single \"include\" : \"filename\" to recursively include another configuration file.   Writing the configuration will save all settings from all files in the output.     BUILDING CGMINER FOR YOURSELF   DEPENDENCIES:   Mandatory:    pkg-config\t\thttp://www.freedesktop.org/wiki/Software/pkg-config  libtool\t\t\thttp://www.gnu.org/software/libtool/  Optional:  curl dev library \thttp://curl.haxx.se/libcurl/  (libcurl4-openssl-dev - Must tell configure --disable-libcurl otherwise  it will attempt to compile it in)   curses dev library   (libncurses5-dev or libpdcurses on WIN32 for text user interface)   libusb-1 dev library (libusb-1.0-0-dev)   (This is only required for USB device support)   libudev dev library (libudev-dev)   (This is only required for USB device support and is linux only)   uthash dev (uthash-dev)   Will use a copy included with the source if unavailable.   libjansson dev (libjansson-dev)   Will use a copy included with the source if unavailable.   If building from git:   autoconf   automake   If building on Ubuntu:   sudo apt-get install build-essential autoconf automake libtool pkg-config \\   \t\t\t\t libcurl4-openssl-dev libudev-dev libusb-1.0-0-dev \\  \t\t\t\t libncurses5-dev   CGMiner specific configuration options:   –enable-ants1          Compile support for Antminer S1 Bitmain (default   \t\t\t  disabled)   –enable-ants2          Compile support for Antminer S2 Bitmain (default   \t\t\t  disabled)   –enable-avalon         Compile support for Avalon (default disabled)   –enable-avalon2        Compile support for Avalon2/3 (default disabled)   –enable-avalon4        Compile support for Avalon4/4.1/6 (default disabled)   –enable-avalon7        Compile support for Avalon7 (default disabled)   –enable-avalon8        Compile support for Avalon8 (default disabled)   –enable-bab            Compile support for BlackArrow Bitfury (default   \t\t\t  disabled)   –enable-bflsc          Compile support for BFL ASICs (default disabled)   –enable-bitforce       Compile support for BitForce FPGAs (default   \t\t\t  disabled)   –enable-bitfury        Compile support for BitFury ASICs (default disabled)   –enable-bitmine_A1     Compile support for Bitmine.ch A1 ASICs (default   \t\t\t  disabled)   –enable-blockerupter   Compile support for ASICMINER BlockErupter Tube/Prisma     (default disabled)   –enable-cointerra      Compile support for Cointerra ASICs (default disabled)   –enable-drillbit       Compile support for Drillbit BitFury ASICs (default   \t\t\t  disabled)   –enable-hashfast       Compile support for Hashfast (default disabled)   –enable-icarus         Compile support for Icarus (default disabled)   –enable-klondike       Compile support for Klondike (default disabled)   –enable-knc            Compile support for KnC miners (default disabled)   –enable-minion         Compile support for Minion BlackArrow ASIC (default   \t\t\t  disabled)   –enable-modminer       Compile support for ModMiner FPGAs(default disabled)   –enable-sp10           Compile support for Spondoolies SP10 (default   \t\t\t  disabled)   –enable-sp30           Compile support for Spondoolies SP30 (default   \t\t\t  disabled)   –disable-libcurl       Disable building with libcurl for GBT support   –enable-libsystemd     Compile support for system watchdog and status   \t\t\t  notifications (default disabled)   –without-curses        Compile support for curses TUI (default enabled)   –with-system-jansson   Compile against dynamic system jansson (default use   \t\t\t  included static jansson)   Basic *nix build instructions:   To actually build:   ./autogen.sh\t# only needed if building from git repo   CFLAGS=”-O2 -Wall -march=native” ./configure    make   No installation is necessary. You may run cgminer from the build   directory directly, but you may do make install if you wish to install   cgminer to a system location or location you specified.   Building for windows:   It is actually easiest to build a windows binary using cross compilation tools   provided by “mxe” available at http://mxe.cc/ (use the 32 bit one!)   Once you have followed the instructions for building mxe:   export PATH=(path/to/mxe)/usr/bin/:$PATH   CFLAGS=”-O2 -Wall -W -march=i686” ./configure –host=i686-pc-mingw32    make   Native WIN32 build instructions: see windows-build.txt but these instructions   are now hopelessly out of date.     Usage instructions:  Run “cgminer –help” to see options:   Usage: cgminer [-DdElmpPQqUsTouOchnV]   Options for both config file and command line:   –anu-freq     Set AntminerU1/2 frequency in MHz, range 125-500 (default: 250.0)   –api-allow    Allow API access only to the given list of [G:]IP[/Prefix] addresses[/subnets]   –api-description  Description placed in the API status header, default: cgminer version   –api-groups   API one letter groups G:cmd:cmd[,P:cmd:*...] defining the cmds a groups can use   –api-listen        Enable API, default: disabled   –api-mcast         Enable API Multicast listener, default: disabled   –api-mcast-addr  API Multicast listen address   –api-mcast-code  Code expected in the API Multicast message, don't use '-'   –api-mcast-des  Description appended to the API Multicast reply, default: ''   –api-mcast-port  API Multicast listen port (default: 4028)   –api-network       Allow API (if enabled) to listen on/for any address, default: only 127.0.0.1   –api-port     Port number of miner API (default: 4028)   –au3-freq     Set AntminerU3 frequency in MHz, range 100-250 (default: 225.0)   –au3-volt     Set AntminerU3 voltage in mv, range 725-850, 0 to not set (default: 775)   –avalon-auto       Adjust avalon overclock frequency dynamically for best hashrate   –avalon-cutoff  Set avalon overheat cut off temperature (default: 60)   –avalon-fan   Set fanspeed percentage for avalon, single value or range (default: 20-100)   –avalon-freq  Set frequency range for avalon-auto, single value or range   –avalon-options  Set avalon options baud:miners:asic:timeout:freq:tech   –avalon-temp  Set avalon target temperature (default: 50)   –avalon2-freq      Set frequency range for Avalon2, single value or range   –avalon2-voltage   Set Avalon2 core voltage, in millivolts   –avalon2-fan       Set Avalon2 target fan speed   –avalon2-cutoff  Set Avalon2 overheat cut off temperature (default: 88)   –avalon2-fixed-speed Set Avalon2 fan to fixed speed   –avalon4-automatic-voltage Automatic adjust voltage base on module DH   –avalon4-voltage   Set Avalon4 core voltage, in millivolts, step: 125   –avalon4-freq      Set frequency for Avalon4, 1 to 3 values, example: 445:385:370   –avalon4-fan       Set Avalon4 target fan speed range   –avalon4-temp  Set Avalon4 target temperature (default: 42)   –avalon4-cutoff  Set Avalon4 overheat cut off temperature (default: 65)   –avalon4-polling-delay  Set Avalon4 polling delay value (ms) (default: 20)   –avalon4-ntime-offset  Set Avalon4 MM ntime rolling max offset (default: 4)   –avalon4-aucspeed  Set Avalon4 AUC IIC bus speed (default: 400000)   –avalon4-aucxdelay  Set Avalon4 AUC IIC xfer read delay, 4800 ~= 1ms (default: 9600)   –avalon4-miningmode  Set Avalon4 mining mode(0:custom, 1:eco, 2:normal, 3:turbo (default: 0)   –avalon4-freezesafe Make Avalon4 running as a radiator when stratum server failed   –avalon4-ntcb  Set Avalon4 MM NTC B value (default: 3450)   –avalon4-freq-min  Set minimum frequency for Avalon4 (default: 100)   –avalon4-freq-max  Set maximum frequency for Avalon4 (default: 1000)   –avalon4-noncecheck-off Disable A3218 inside nonce check function   –avalon4-smart-speed  Set smart speed, range 0-3. 0 means Disable (default: 2)   –avalon4-speed-bingo  Set A3218 speed bingo for smart speed mode 1 (default: 255)   –avalon4-speed-error  Set A3218 speed error for smart speed mode 1 (default: 3)   –avalon4-least-pll  Set least pll check threshold for smart speed mode 2 (default: 768)   –avalon4-most-pll  Set most pll check threshold for smart speed mode 2 (default: 256)   –avalon7-voltage   Set Avalon7 default core voltage, in millivolts, step: 78   –avalon7-voltage-level Set Avalon7 default level of core voltage, range:[0, 15], step: 1   –avalon7-voltage-offset Set Avalon7 default offset of core voltage, range:[-2, 1], step: 1   –avalon7-freq      Set Avalon7 default frequency, range:[24, 1404], step: 12, example: 500   –avalon7-freq-sel  Set Avalon7 default frequency select, range:[0, 5], step: 1, example: 3 (default: 0)   –avalon7-fan       Set Avalon7 target fan speed, range:[0, 100], step: 1, example: 0-100   –avalon7-temp  Set Avalon7 target temperature, range:[0, 100] (default: 99)   –avalon7-polling-delay  Set Avalon7 polling delay value (ms) (default: 20)   –avalon7-aucspeed  Set AUC3 IIC bus speed (default: 400000)   –avalon7-aucxdelay  Set AUC3 IIC xfer read delay, 4800 ~= 1ms (default: 19200)   –avalon7-smart-speed  Set Avalon7 smart speed, range 0-1. 0 means Disable (default: 1)   –avalon7-th-pass  Set A3212 th pass value (default: 162)   –avalon7-th-fail  Set A3212 th fail value (default: 10921)   –avalon7-th-init  Set A3212 th init value (default: 32767)   –avalon7-th-ms  Set A3212 th ms value (default: 1)   –avalon7-th-timeout  Set A3212 th timeout value (default: 0)   –avalon7-iic-detect Enable Avalon7 detect through iic controller   –avalon7-freqadj-time  Set Avalon7 check interval when run in AVA7_FREQ_TEMPADJ_MODE (default: 60)   –avalon7-delta-temp  Set Avalon7 delta temperature when reset freq in AVA7_FREQ_TEMPADJ_MODE (default: 0)   –avalon7-delta-freq  Set Avalon7 delta freq when adjust freq in AVA7_FREQ_TEMPADJ_MODE (default: 100)   –avalon7-freqadj-temp  Set Avalon7 check temperature when run into AVA7_FREQ_TEMPADJ_MODE (default: 104)   –avalon7-nonce-mask  Set A3212 nonce mask, range 24-32. (default: 31)   –no-avalon7-asic-debug Disable A3212 debug.   –avalon8-voltage-level Set Avalon8 default level of core voltage, range:[0, 15], step: 1   –avalon8-voltage-level-offset Set Avalon8 default offset of core voltage level, range:[-2, 1], step: 1   –avalon8-freq      Set Avalon8 default frequency, range:[25, 1200], step: 25, example: 800   –avalon8-freq-sel  Set Avalon8 default frequency select, range:[0, 3], step: 1, example: 3 (default: 3)   –avalon8-fan       Set Avalon8 target fan speed, range:[0, 100], step: 1, example: 0-100   –avalon8-temp  Set Avalon8 target temperature, range:[0, 100] (default: 90)   –avalon8-polling-delay  Set Avalon8 polling delay value (ms) (default: 20)   –avalon8-aucspeed  Set AUC3 IIC bus speed (default: 400000)   –avalon8-aucxdelay  Set AUC3 IIC xfer read delay, 4800 ~= 1ms (default: 19200)   –avalon8-smart-speed  Set Avalon8 smart speed, range 0-1. 0 means Disable (default: 1)   –avalon8-th-pass  Set A3210 th pass value (default: -1)   –avalon8-th-fail  Set A3210 th fail value (default: -1)   –avalon8-th-init  Set A3210 th init value (default: 32767)   –avalon8-th-ms  Set A3210 th ms value (default: 5)   –avalon8-th-timeout  Set A3210 th timeout value (default: 4294967295)   –avalon8-th-add  Set A3210 th add value (default: 1)   –avalon8-iic-detect Enable Avalon8 detect through iic controller   –avalon8-nonce-mask  Set A3210 nonce mask, range 24-32. (default: -1)   –avalon8-nonce-check  Set A3210 nonce check, range 0-1. (default: 1)   –avalon8-roll-enable  Set A3210 roll enable, range 0-1. (default: 1)   –avalon8-mux-l2h  Set Avalon8 mux l2h, range 0-2. (default: 0)   –avalon8-mux-h2l  Set Avalon8 mux h2l, range 0-1. (default: 1)   –avalon8-h2ltime0-spd  Set Avalon8 h2ltime0 spd, range 0-255. (default: 3)   –avalon8-spdlow  Set Avalon8 spdlow, range 0-3. (default: -1)   –avalon8-spdhigh  Set Avalon8 spdhigh, range 0-3. (default: 3)   –avalon8-cinfo-asic Set Avalon8 cinfo asic index, range:[0, 25], step: 1   –avalon8-pid-p  Set Avalon8 pid-p, range 0-9999. (default: 2)   –avalon8-pid-i  Set Avalon8 pid-i, range 0-9999. (default: 5)   –avalon8-pid-d  Set Avalon8 pid-d, range 0-9999. (default: 0)   –bab-options  Set BaB options max:def:min:up:down:hz:delay:trf   –balance           Change multipool strategy from failover to even share balance   –benchfile    Run cgminer in benchmark mode using a work file - produces no shares   –benchfile-display Display each benchfile nonce found   –benchmark         Run cgminer in benchmark mode - produces no shares   –bet-clk      Set clockspeed of ASICMINER Tube/Prisma to (arg+1)*10MHz (default: 23)   –bfl-range         Use nonce range on bitforce devices if supported   –bflsc-overheat  Set overheat temperature where BFLSC devices throttle, 0 to disable (default: 85)   –bitburner-fury-voltage  Set BitBurner Fury core voltage, in millivolts   –bitburner-fury-options  Override avalon-options for BitBurner Fury boards baud:miners:asic:timeout:freq   –bitburner-voltage  Set BitBurner (Avalon) core voltage, in millivolts   –bitmain-auto      Adjust bitmain overclock frequency dynamically for best hashrate   –bitmain-cutoff  Set bitmain overheat cut off temperature   –bitmain-fan  Set fanspeed percentage for bitmain, single value or range (default: 20-100)   –bitmain-freq  Set bitmain freq options timeout:freq:regdata   –bitmain-hwerror   Set bitmain device detect hardware error   –bitmain-options  Set bitmain options   baud:miners:asic:timeout:freq:regdata   –bitmain-temp  Set bitmain target temperature   –bitmain-workdelay  Set bitmain work delay (ms) 0-100   –bitmain-voltage  Set bitmain voltage - S2/S3 only   –bitmain-dev  Set bitmain device - S2 only   –bitmainbeeper     Set bitmain beeper ringing   –bitmaintempoverctrl Set bitmain stop runing when temprerature is over 80 degree Celsius   –bxf-bits     Set max BXF/HXF bits for overclocking (default: 54)   –bxf-temp-target  Set target temperature for BXF/HXF devices (default: 82)   –bxm-bits     Set BXM bits for overclocking (default: 54)   –btc-address  Set bitcoin target address when solo mining to bitcoind   –btc-sig      Set signature to add to coinbase when solo mining (optional)   –compac-freq  Set GekkoScience Compac frequency in MHz, range 100-500 (default: 150.0)   –compact           Use compact display without per device statistics                  –debug       -D          Enable debug output           –decode            Decode 2nd pool stratum coinbase transactions (1st must be bitcoind) and exit   –disable-rejecting Automatically disable pools that continually reject shares   –dragonmint-t1-options  Dragonmint T1 options   ref_clk_khz:sys_clk_khz:spi_clk_khz:override_chip_num   –T1efficient       Tune Dragonmint T1 per chain voltage and frequency for optimal efficiency   –T1noauto          Disable Dragonmint T1 per chain auto voltage and frequency tuning   –T1performance     Tune Dragonmint T1 per chain voltage and frequency for maximum performance   –T1fantarget  Throttle T1 frequency to keep fan less than target fan speed (default: 100)   –T1Pll1       Set PLL Clock 1 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll2       Set PLL Clock 2 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll3       Set PLL Clock 3 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll4       Set PLL Clock 4 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll5       Set PLL Clock 5 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll6       Set PLL Clock 6 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll7       Set PLL Clock 7 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll8       Set PLL Clock 8 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Volt1      Dragonmint T1 set voltage 1 - VID overrides if set (390-425) (default: 404)   –T1Volt2      Dragonmint T1 set voltage 2 - VID overrides if set (390-425) (default: 404)   –T1Volt3      Dragonmint T1 set voltage 3 - VID overrides if set (390-425) (default: 404)   –T1Volt4      Dragonmint T1 set voltage 4 - VID overrides if set (390-425) (default: 404)   –T1Volt5      Dragonmint T1 set voltage 5 - VID overrides if set (390-425) (default: 404)   –T1Volt6      Dragonmint T1 set voltage 6 - VID overrides if set (390-425) (default: 404)   –T1Volt7      Dragonmint T1 set voltage 7 - VID overrides if set (390-425) (default: 404)   –T1Volt8      Dragonmint T1 set voltage 8 - VID overrides if set (390-425) (default: 404)   –T1VID1       Dragonmint T1 set VID 1 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID2       Dragonmint T1 set VID 2 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID3       Dragonmint T1 set VID 3 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID4       Dragonmint T1 set VID 4 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID5       Dragonmint T1 set VID 5 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID6       Dragonmint T1 set VID 6 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID7       Dragonmint T1 set VID 7 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID8       Dragonmint T1 set VID 8 in noauto - Overrides voltage if set (1-31) (default: 0)   –drillbit-options  Set drillbit options &lt;int|ext&gt;:clock[:clock_divider][:voltage]                  –expiry       -E    Upper bound on how many seconds after getting work we consider a share from it stale (default: 120)           –failover-only     Don’t leak work to backup pools when primary pool is lagging   –fix-protocol      Do not redirect to stratum protocol from GBT   –hfa-hash-clock  Set hashfast clock speed (default: 550)   –hfa-fail-drop  Set how many MHz to drop clockspeed each failure on an overlocked hashfast device (default: 10)   –hfa-fan      Set fanspeed percentage for hashfast, single value or range (default: 10-85)   –hfa-name     Set a unique name for a single hashfast device specified with --usb or the first device found   –hfa-noshed        Disable hashfast dynamic core disabling feature   –hfa-options  Set hashfast options name:clock (comma separated)   –hfa-temp-overheat  Set the hashfast overheat throttling temperature (default: 95)   –hfa-temp-target  Set the hashfast target temperature (0 to disable) (default: 88)   –hro-freq          Set the hashratio clock frequency (default: 280)   –hotplug      Seconds between hotplug checks (0 means never check)   –klondike-options  Set klondike options clock:temptarget   –load-balance      Change multipool strategy from failover to quota based balance                  –log       -l       Interval in seconds between log output (default: 5)           –lowmem            Minimise caching of shares for low memory applications   –minion-chipreport  Seconds to report chip 5min hashrate, range 0-100 (default: 0=disabled)   –minion-freq  Set minion chip frequencies in MHz, single value or comma list, range 100-1400 (default: 1200)   –minion-freqchange Millisecond total time to do frequency changes (default: 1000)   –minion-freqpercent Percentage to use when starting up a chip (default: 70%)   –minion-idlecount  Report when IdleCount is &gt;0 or changes   –minion-ledcount   Turn off led when more than this many chips below the ledlimit (default: 0)   –minion-ledlimit   Turn off led when chips GHs are below this (default: 90)   –minion-noautofreq Disable automatic frequency adjustment   –minion-overheat   Enable directly halting any chip when the status exceeds 100C   –minion-spidelay   Add a delay in microseconds after each SPI I/O   –minion-spireset   SPI regular reset: iNNN for I/O count or sNNN for seconds - 0 means none   –minion-spisleep   Sleep time in milliseconds when doing an SPI reset   –minion-temp  Set minion chip temperature threshold, single value or comma list, range 120-160 (default: 135C)                  –monitor       -m   Use custom pipe cmd for output messages           –nfu-bits     Set nanofury bits for overclocking, range 32-63 (default: 50)   –net-delay         Impose small delays in networking to not overload slow routers   –no-submit-stale   Don’t submit shares if they are detected as stale   –osm-led-mode  Set LED mode for OneStringMiner devices (default: 4)                  –pass       -p      Password for bitcoin JSON-RPC server           –per-device-stats  Force verbose mode and output per-device statistics                  –protocol-dump       -P  Verbose dump of protocol-level activities                          –queue       -Q     Minimum number of work items to have queued (0+) (default: 1)                          –quiet       -q          Disable logging output, display status and errors                          –quota       -U     quota;URL combination for server with load-balance strategy quotas           –real-quiet        Disable all output   –rock-freq    Set RockMiner frequency in MHz, range 200-400 (default: 270)   –rotate       Change multipool strategy from failover to regularly rotate at N minutes (default: 0)   –round-robin       Change multipool strategy from failover to round robin on failure                  –scan-time       -s  Upper bound on time spent scanning current work, in seconds (default: -1)           –sched-start  Set a time of day in HH:MM to start mining (a once off without a stop time)   –sched-stop   Set a time of day in HH:MM to stop mining (will quit without a start time)   –sharelog     Append share log to file   –shares       Quit after mining N shares (default: unlimited)   –socks-proxy  Set socks4 proxy (host:port)   –suggest-diff  Suggest miner difficulty for pool to user (default: none)   –syslog            Use system log for output messages (default: standard error)   –temp-cutoff  Temperature where a device will be automatically disabled, one value or comma separated list (default: 95)                  –text-only       -T      Disable ncurses formatted screen output                          –url       -o       URL for bitcoin JSON-RPC server           –usb          USB device selection                  –user       -u      Username for bitcoin JSON-RPC server                          –userpass       -O  Username:Password pair for bitcoin JSON-RPC server           –verbose           Log verbose output to stderr as well as status output   –widescreen        Use extra wide display without toggling   –worktime          Display extra work time debug information   Options for command line only:                  –config       -c    Load a JSON-format configuration file           See example.conf for an example configuration.   –default-config  Specify the filename of the default config file   Loaded at start and used when saving without a name.                  –help       -h           Print this message                          –ndevs       -n          Display all USB devices and exit                          –version       -V        Display version and exit           Silent USB device (ASIC and FPGA) options:   –icarus-options  Set specific FPGA board configurations - one set of values for all or comma separated   –icarus-timing  Set how the Icarus timing is calculated - one setting/value for all or comma separated   –usb-dump          (See FPGA-README)   See FGPA-README or ASIC-README for more information regarding these.   ASIC only options:   –anu-freq     Set AntminerU1/2 frequency in MHz, range 125-500 (default: 250.0)   –au3-freq     Set AntminerU3 frequency in MHz, range 100-250 (default: 225.0)   –au3-volt     Set AntminerU3 voltage in mv, range 725-850, 0 to not set (default: 750)   –avalon-auto       Adjust avalon overclock frequency dynamically for best hashrate   –avalon-cutoff  Set avalon overheat cut off temperature (default: 60)   –avalon-fan  Set fanspeed percentage for avalon, single value or range (default: 20-100)   –avalon-freq  Set frequency range for avalon-auto, single value or range   –avalon-options  Set avalon options baud:miners:asic:timeout:freq:tech   –avalon-temp  Set avalon target temperature (default: 50)   –avalon2-freq      Set frequency range for Avalon2, single value or range   –avalon2-voltage   Set Avalon2 core voltage, in millivolts   –avalon2-fan       Set Avalon2 target fan speed   –avalon2-cutoff  Set Avalon2 overheat cut off temperature (default: 88)   –avalon2-fixed-speed Set Avalon2 fan to fixed speed   –avalon4-automatic-voltage Automatic adjust voltage base on module DH   –avalon4-voltage   Set Avalon4 core voltage, in millivolts, step: 125   –avalon4-freq      Set frequency for Avalon4, 1 to 3 values, example: 445:385:370   –avalon4-fan       Set Avalon4 target fan speed range   –avalon4-temp  Set Avalon4 target temperature (default: 42)   –avalon4-cutoff  Set Avalon4 overheat cut off temperature (default: 65)   –avalon4-polling-delay  Set Avalon4 polling delay value (ms) (default: 20)   –avalon4-ntime-offset  Set Avalon4 MM ntime rolling max offset (default: 4)   –avalon4-aucspeed  Set Avalon4 AUC IIC bus speed (default: 400000)   –avalon4-aucxdelay  Set Avalon4 AUC IIC xfer read delay, 4800 ~= 1ms (default: 9600)   –avalon7-voltage   Set Avalon7 default core voltage, in millivolts, step: 78   –avalon7-voltage-level Set Avalon7 default level of core voltage, range:[0, 15], step: 1   –avalon7-voltage-offset Set Avalon7 default offset of core voltage, range:[-2, 1], step: 1   –avalon7-freq      Set Avalon7 default frequency, range:[24, 1404], step: 12, example: 500   –avalon7-freq-sel  Set Avalon7 default frequency select, range:[0, 5], step: 1, example: 3 (default: 0)   –avalon7-fan       Set Avalon7 target fan speed, range:[0, 100], step: 1, example: 0-100   –avalon7-temp  Set Avalon7 target temperature, range:[0, 100] (default: 99)   –avalon7-polling-delay  Set Avalon7 polling delay value (ms) (default: 20)   –avalon7-aucspeed  Set AUC3 IIC bus speed (default: 400000)   –avalon7-aucxdelay  Set AUC3 IIC xfer read delay, 4800 ~= 1ms (default: 19200)   –avalon7-smart-speed  Set Avalon7 smart speed, range 0-1. 0 means Disable (default: 1)   –avalon7-th-pass  Set A3212 th pass value (default: 162)   –avalon7-th-fail  Set A3212 th fail value (default: 10921)   –avalon7-th-init  Set A3212 th init value (default: 32767)   –avalon7-th-ms  Set A3212 th ms value (default: 1)   –avalon7-th-timeout  Set A3212 th timeout value (default: 0)   –avalon7-iic-detect Enable Avalon7 detect through iic controller   –avalon7-freqadj-time  Set Avalon7 check interval when run in AVA7_FREQ_TEMPADJ_MODE (default: 60)   –avalon7-delta-temp  Set Avalon7 delta temperature when reset freq in AVA7_FREQ_TEMPADJ_MODE (default: 0)   –avalon7-delta-freq  Set Avalon7 delta freq when adjust freq in AVA7_FREQ_TEMPADJ_MODE (default: 100)   –avalon7-freqadj-temp  Set Avalon7 check temperature when run into AVA7_FREQ_TEMPADJ_MODE (default: 104)   –avalon7-nonce-mask  Set A3212 nonce mask, range 24-32. (default: 31)   –no-avalon7-asic-debug Disable A3212 debug.   –avalon8-voltage-level Set Avalon8 default level of core voltage, range:[0, 15], step: 1   –avalon8-voltage-level-offset Set Avalon8 default offset of core voltage level, range:[-2, 1], step: 1   –avalon8-freq      Set Avalon8 default frequency, range:[25, 1200], step: 25, example: 800   –avalon8-freq-sel  Set Avalon8 default frequency select, range:[0, 3], step: 1, example: 3 (default: 3)   –avalon8-fan       Set Avalon8 target fan speed, range:[0, 100], step: 1, example: 0-100   –avalon8-temp  Set Avalon8 target temperature, range:[0, 100] (default: 90)   –avalon8-polling-delay  Set Avalon8 polling delay value (ms) (default: 20)   –avalon8-aucspeed  Set AUC3 IIC bus speed (default: 400000)   –avalon8-aucxdelay  Set AUC3 IIC xfer read delay, 4800 ~= 1ms (default: 19200)   –avalon8-smart-speed  Set Avalon8 smart speed, range 0-1. 0 means Disable (default: 1)   –avalon8-th-pass  Set A3210 th pass value (default: -1)   –avalon8-th-fail  Set A3210 th fail value (default: -1)   –avalon8-th-init  Set A3210 th init value (default: 32767)   –avalon8-th-ms  Set A3210 th ms value (default: 5)   –avalon8-th-timeout  Set A3210 th timeout value (default: 4294967295)   –avalon8-th-add  Set A3210 th add value (default: 1)   –avalon8-iic-detect Enable Avalon8 detect through iic controller   –avalon8-nonce-mask  Set A3210 nonce mask, range 24-32. (default: -1)   –avalon8-nonce-check  Set A3210 nonce check, range 0-1. (default: 1)   –avalon8-roll-enable  Set A3210 roll enable, range 0-1. (default: 1)   –avalon8-mux-l2h  Set Avalon8 mux l2h, range 0-2. (default: 0)   –avalon8-mux-h2l  Set Avalon8 mux h2l, range 0-1. (default: 1)   –avalon8-h2ltime0-spd  Set Avalon8 h2ltime0 spd, range 0-255. (default: 3)   –avalon8-spdlow  Set Avalon8 spdlow, range 0-3. (default: -1)   –avalon8-spdhigh  Set Avalon8 spdhigh, range 0-3. (default: 3)   –avalon8-cinfo-asic Set Avalon8 cinfo asic index, range:[0, 25], step: 1   –avalon8-pid-p  Set Avalon8 pid-p, range 0-9999. (default: 2)   –avalon8-pid-i  Set Avalon8 pid-i, range 0-9999. (default: 5)   –avalon8-pid-d  Set Avalon8 pid-d, range 0-9999. (default: 0)   –bab-options  Set BaB options max:def:min:up:down:hz:delay:trf   –bflsc-overheat  Set overheat temperature where BFLSC devices throttle, 0 to disable (default: 90)   –bitburner-fury-options  Override avalon-options for BitBurner Fury boards baud:miners:asic:timeout:freq   –bitburner-fury-voltage  Set BitBurner Fury core voltage, in millivolts   –bitburner-voltage  Set BitBurner (Avalon) core voltage, in millivolts   –bitmine-a1-options :::   –bxf-temp-target  Set target temperature for BXF devices (default: 82)   –bxm-bits     Set BXM bits for overclocking (default: 50)   –compac-freq  Set GekkoScience Compac frequency in MHz, range 100-500 (default: 150.0)   –dragonmint-t1-options  Dragonmint T1 options   ref_clk_khz:sys_clk_khz:spi_clk_khz:override_chip_num   –T1efficient       Tune Dragonmint T1 per chain voltage and frequency for optimal efficiency   –T1noauto          Disable Dragonmint T1 per chain auto voltage and frequency tuning   –T1performance     Tune Dragonmint T1 per chain voltage and frequency for maximum performance   –T1fantarget  Throttle T1 frequency to keep fan less than target fan speed (default: 100)   –T1Pll1       Set PLL Clock 1 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll2       Set PLL Clock 2 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll3       Set PLL Clock 3 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll4       Set PLL Clock 4 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll5       Set PLL Clock 5 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll6       Set PLL Clock 6 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll7       Set PLL Clock 7 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Pll8       Set PLL Clock 8 in Dragonmint T1 broad 1 chip (-1: 1000MHz, &gt;0:Lookup PLL table) (default: 1332)   –T1Volt1      Dragonmint T1 set voltage 1 - VID overrides if set (390-425) (default: 404)   –T1Volt2      Dragonmint T1 set voltage 2 - VID overrides if set (390-425) (default: 404)   –T1Volt3      Dragonmint T1 set voltage 3 - VID overrides if set (390-425) (default: 404)   –T1Volt4      Dragonmint T1 set voltage 4 - VID overrides if set (390-425) (default: 404)   –T1Volt5      Dragonmint T1 set voltage 5 - VID overrides if set (390-425) (default: 404)   –T1Volt6      Dragonmint T1 set voltage 6 - VID overrides if set (390-425) (default: 404)   –T1Volt7      Dragonmint T1 set voltage 7 - VID overrides if set (390-425) (default: 404)   –T1Volt8      Dragonmint T1 set voltage 8 - VID overrides if set (390-425) (default: 404)   –T1VID1       Dragonmint T1 set VID 1 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID2       Dragonmint T1 set VID 2 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID3       Dragonmint T1 set VID 3 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID4       Dragonmint T1 set VID 4 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID5       Dragonmint T1 set VID 5 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID6       Dragonmint T1 set VID 6 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID7       Dragonmint T1 set VID 7 in noauto - Overrides voltage if set (1-31) (default: 0)   –T1VID8       Dragonmint T1 set VID 8 in noauto - Overrides voltage if set (1-31) (default: 0)   –hfa-hash-clock  Set hashfast clock speed (default: 550)   –hfa-fail-drop  Set how many MHz to drop clockspeed each failure on an overlocked hashfast device (default: 10)   –hfa-fan      Set fanspeed percentage for hashfast, single value or range (default: 10-85)   –hfa-name     Set a unique name for a single hashfast device specified with --usb or the first device found   –hfa-noshed        Disable hashfast dynamic core disabling feature   –hfa-temp-overheat  Set the hashfast overheat throttling temperature (default: 95)   –hfa-temp-target  Set the hashfast target temperature (0 to disable) (default: 88)   –hro-freq          Set the hashratio clock frequency (default: 280)   –klondike-options  Set klondike options clock:temptarget   –rock-freq    Set RockMiner frequency in MHz, range 125-500 (default: 270)   See ASIC-README for more information regarding these.   FPGA only options:   –bfl-range         Use nonce range on bitforce devices if supported   See FGPA-README for more information regarding this.   Cgminer should automatically find all of your Avalon ASIC, BFL ASIC, BitForce   FPGAs, Icarus bitstream FPGAs, Klondike ASIC, ASICMINER usb block erupters,   KnC ASICs, BaB ASICs, Hashfast ASICs, ModMiner FPGAs, BPMC/BGMC BF1 USB ASICs,   Bi*fury USB ASICs, Onestring miner USB ASICs, Hexfury USB ASICs, Nanofury USB   ASICs, Antminer U1/U2/U2+ U3 USB ASICs, Cointerra devices, BFx2 USB ASICs,   Rockminer R-Box/RK-Box/T1 USB ASICs, Avalon2/3/4 USB ASICs and Hashratio USB   ASICs.     SETTING UP USB DEVICES   WINDOWS:   On windows, the direct USB support requires the installation of a WinUSB   driver (NOT the ftdi_sio driver), and attach it to the chosen USB device.   When configuring your device, plug it in and wait for windows to attempt to   install a driver on its own. It may think it has succeeded or failed but wait   for it to finish regardless. This is NOT the driver you want installed. At this   point you need to associate your device with the WinUSB driver. The easiest   way to do this is to use the zadig utility which you must right click on and   run as administrator. Then once you plug in your device you can choose the   “list all devices” from the “option” menu and you should be able to see the   device as something like: “BitFORCE SHA256 SC”. Choose the install or replace   driver option and select WinUSB. You can either google for zadig or download   it from the cgminer directory in the DOWNLOADS link above.   When you first switch a device over to WinUSB with zadig and it shows that   correctly on the left of the zadig window, but it still gives permission   errors, you may need to unplug the USB miner and then plug it back in. Some   users may need to reboot at this point.   LINUX:   The short version:   sudo cp 01-cgminer.rules /etc/udev/rules.d/   The long version:   On linux, the direct USB support requires no drivers at all. However due to   permissions issues, you may not be able to mine directly on the devices as a   regular user without giving the user access to the device or by mining as   root (administrator). In order to give your regular user access, you can make   him a member of the plugdev group with the following commands:   sudo usermod -G plugdev -a whoami   If your distribution does not have the plugdev group you can create it with:   sudo groupadd plugdev   In order for the USB devices to instantly be owned by the plugdev group and   accessible by anyone from the plugdev group you can copy the file   “01-cgminer.rules” from the cgminer archive into the /etc/udev/rules.d   directory with the following command:   sudo cp 01-cgminer.rules /etc/udev/rules.d/   After this you can either manually restart udev and re-login, or more easily   just reboot.   OSX:   On OSX, like Linux, no drivers need to be installed. However some devices   like the bitfury USB sticks automatically load a driver thinking they’re a   modem and the driver needs to be unloaded for cgminer to work:   sudo kextunload -b com.apple.driver.AppleUSBCDC   sudo kextunload -b com.apple.driver.AppleUSBCDCACMData   There may be a limit to the number of USB devices that you are allowed to start.   The following set of commands, followed by a reboot will increase that:   sudo su  touch /etc/sysctl.conf  echo kern.sysv.semume=100 &gt;&gt; /etc/sysctl.conf  chown root:wheel /etc/sysctl.conf  chmod 0644 /etc/sysctl.conf   Some devices need superuser access to mine on them so cgminer may need to   be started with sudo   i.e.:   sudo cgminer      Advanced USB options:   The –usb option can restrict how many USB devices are found:   –usb 1:2,1:3,1:4,1:*   or   –usb BAS:1,BFL:1,MMQ:0,ICA:0,KLN:0   or   –usb :10   You can only use one of the above 3   The first version   –usb 1:2,1:3,1:4,1:*   allows you to select which devices to mine on with a list of USB   bus_number:device_address   All other USB devices will be ignored   Hotplug will also only look at the devices matching the list specified and   find nothing new if they are all in use   You can specify just the USB bus_number to find all devices like 1:*   which means any devices on USB bus_number 1   This is useful if you unplug a device then plug it back in the same port,   it usually reappears with the same bus_number but a different device_address   You can see the list of all USB devices on linux with ‘sudo lsusb’   Cgminer will list the recognised USB devices   with the ‘-n’ option or the   ’–usb-dump 0’ option   The ‘–usb-dump N’ option with a value of N greater than 0 will dump a lot   of details about each recognised USB device   If you wish to see all USB devices, include the –usb-list-all option   The second version   –usb BAS:1,BFL:1,MMQ:0,ICA:0,KLN:0   allows you to specify how many devices to choose based on each device   driver cgminer has - the current USB drivers are:   AVA, BAS, BFL, BF1, DRB, HFA, ICA, KLN and MMQ.   N.B. you can only specify which device driver to limit, not the type of   each device, e.g. with BAS:n you can limit how many BFL ASIC devices will   be checked, but you cannot limit the number of each type of BFL ASIC   Also note that the MMQ count is the number of MMQ backplanes you have   not the number of MMQ FPGAs   The third version   –usb :10   means only use a maximum of 10 devices of any supported USB devices   Once cgminer has 10 devices it will not configure any more and hotplug will   not scan for any more   If one of the 10 devices stops working, hotplug - if enabled, as is default      will scan normally again until it has 10 devices   –usb :0 will disable all USB I/O other than to initialise libusb     WHILE RUNNING:   The following options are available while running with a single keypress:   [U]SB management [P]ool management [S]ettings [D]isplay options [Q]uit   U gives you:   [S]ummary of device information   [E]nable device   [D]isable device   [U]nplug to allow hotplug restart   [R]eset device USB   [L]ist all known devices   [B]lacklist current device from current instance of cgminer   [W]hitelist previously blacklisted device   [H]otplug interval (0 to disable)   P gives you:   Current pool management strategy: Failover   [F]ailover only disabled   [A]dd pool [R]emove pool [D]isable pool [E]nable pool   [C]hange management strategy [S]witch pool [I]nformation   S gives you:   [Q]ueue: 1   [S]cantime: 60   [E]xpiry: 120   [W]rite config file   [C]gminer restart   D gives you:   [N]ormal [C]lear [S]ilent mode (disable all output)   [D]ebug:off   [P]er-device:off   [Q]uiet:off   [V]erbose:off   [R]PC debug:off   [W]orkTime details:off   co[M]pact: off   [T]oggle status switching:enabled   [Z]ero statistics   [L]og interval:5   Q quits the application.   The running log shows output like this:   [2013-11-09 11:04:41] Accepted 01b3bde7 Diff 150/128 AVA 1 pool 0   [2013-11-09 11:04:49] Accepted 015df995 Diff 187/128 AVA 1 pool 0   [2013-11-09 11:04:50] Accepted 01163b68 Diff 236/128 AVA 1 pool 0   [2013-11-09 11:04:53] Accepted 9f745840 Diff 411/128 BAS 1 pool 0   The 8 byte hex value are the 1st nonzero bytes of the share being submitted to   the pool. The 2 diff values are the actual difficulty target that share reached   followed by the difficulty target the pool is currently asking for.     Also many issues and FAQs are covered in the forum thread   dedicated to this program,   http://forum.bitcoin.org/index.php?topic=28402.0   DISPLAY:   The display is roughly split into two portions, the top status window and the   bottom scrolling log window.   STATUS WINDOW   The status window is split into overall status and per device status.   Overall status:   The output line shows the following:   (5s):2.469T (1m):2.677T (5m):2.040T (15m):1.014T (avg):2.733Th/s   These are exponentially decaying average hashrates over 5s/1m/5m/15m and an   average since the start.   Followed by:   A:290391  R:5101  HW:145  WU:37610.4/m   Each column is as follows:   A:  The total difficulty of Accepted shares   R:  The total difficulty of Rejected shares   HW:  The number of HardWare errors   WU:  The Work Utility defined as the number of diff1 shares work / minute   (accepted or rejected).   alternating with:   ST: 22  SS: 0  NB: 2  LW: 356090  GF: 0  RF: 0   ST is STaged work items (ready to use).   SS is Stale Shares discarded (detected and not submitted so don’t count as rejects)   NB is New Blocks detected on the network   LW is Locally generated Work items   GF is Getwork Fail Occasions (server slow to provide work)   RF is Remote Fail occasions (server slow to accept work)   Followed by:   Connected to pool.com diff 3.45K with stratum as user me   The diff shown is the current vardiff requested by the pool currently being   mined at.   Followed by:   Block: ca0d237f…  Diff:5.01G  Started: [00:14:27]  Best share: 1.18M   This shows a short stretch about the current block, when the new block started,   and the all time best difficulty share you’ve found since starting cgminer   this time.   Per device status:                  6: HFS Random  : 645MHz  85C  13% 0.79V       2.152T / 1.351Th/s           Each column is as follows:   Temperature (if supported)   Fanspeed (if supported)   Voltage (if supported)   A 5 second exponentially decaying average hash rate   An all time average hash rate   alternating with                  6: HFS Random  : 645MHz  86C  13% 0.80V       A:290348 R:1067 HW:88 WU:18901.8/m           The total difficulty of accepted shares   The total difficulty of rejected shares   The number of hardware erorrs   The work utility defined as the number of diff1 shares work / minute   LOG WINDOW   All running information is shown here, usually share submission results and   block update notifications, along with device messages and warnings.   [2014-03-29 00:24:09] Accepted 1397768d Diff 3.35K/2727 HFS 0 pool 0   [2014-03-29 00:24:13] Stratum from pool 0 detected new block     MULTIPOOL   FAILOVER STRATEGIES WITH MULTIPOOL:   A number of different strategies for dealing with multipool setups are   available. Each has their advantages and disadvantages so multiple strategies   are available by user choice, as per the following list:   FAILOVER:   The default strategy is failover. This means that if you input a number of   pools, it will try to use them as a priority list, moving away from the 1st   to the 2nd, 2nd to 3rd and so on. If any of the earlier pools recover, it will   move back to the higher priority ones.   ROUND ROBIN:   This strategy only moves from one pool to the next when the current one falls   idle and makes no attempt to move otherwise.   ROTATE:   This strategy moves at user-defined intervals from one active pool to the next,   skipping pools that are idle.   LOAD BALANCE:   This strategy sends work to all the pools on a quota basis. By default, all   pools are allocated equal quotas unless specified with –quota. This   apportioning of work is based on work handed out, not shares returned so is   independent of difficulty targets or rejected shares. While a pool is disabled   or dead, its quota is dropped until it is re-enabled. Quotas are forward   looking, so if the quota is changed on the fly, it only affects future work.   If all pools are set to zero quota or all pools with quota are dead, it will   fall back to a failover mode. See quota below for more information.   The failover-only flag has special meaning in combination with load-balance   mode and it will distribute quota back to priority pool 0 from any pools that   are unable to provide work for any reason so as to maintain quota ratios   between the rest of the pools.   BALANCE:   This strategy monitors the amount of difficulty 1 shares solved for each pool   and uses it to try to end up doing the same amount of work for all pools.     QUOTAS   The load-balance multipool strategy works off a quota based scheduler. The   quotas handed out by default are equal, but the user is allowed to specify any   arbitrary ratio of quotas. For example, if all the quota values add up to 100,   each quota value will be a percentage, but if 2 pools are specified and pool0   is given a quota of 1 and pool1 is given a quota of 9, pool0 will get 10% of   the work and pool1 will get 90%. Quotas can be changed on the fly by the API,   and do not act retrospectively. Setting a quota to zero will effectively   disable that pool unless all other pools are disabled or dead. In that   scenario, load-balance falls back to regular failover priority-based strategy.   While a pool is dead, it loses its quota and no attempt is made to catch up   when it comes back to life.   To specify quotas on the command line, pools should be specified with a   semicolon separated –quota(or -U) entry instead of –url. Pools specified with   –url are given a nominal quota value of 1 and entries can be mixed.   For example:   –url poola:porta -u usernamea -p passa –quota “2;poolb:portb” -u usernameb -p passb   Will give poola 1/3 of the work and poolb 2/3 of the work.   Writing configuration files with quotas is likewise supported. To use the above   quotas in a configuration file they would be specified thus:   “pools” : [   {   \t\"url\" : \"poola:porta\",  \t\"user\" : \"usernamea\",  \t\"pass\" : \"passa\"   },   {   \t\"quota\" : \"2;poolb:portb\",  \t\"user\" : \"usernameb\",  \t\"pass\" : \"passb\"   }   ]     SOLO MINING   Solo mining can be done efficiently as a single pool entry or a backup to   any other pooled mining and it is recommended everyone have solo mining set up   as their final backup in case all their other pools are DDoSed/down for the   security of the network. To enable solo mining, one must be running a local   bitcoind/bitcoin-qt or have one they have rpc access to. To do this, edit your   bitcoind configuration file (bitcoin.conf) with the following extra lines,   using your choice of username and password:   rpcuser=username   rpcpassword=password   Restart bitcoind, then start cgminer, pointing to the bitcoind and choose a   btc address with the following options, altering to suit their setup:   cgminer -o http://localhost:8332 -u username -p password --btc-address 15qSxP1SQcUX3o4nhkfdbgyoWEFMomJ4rZ   Note the http:// is mandatory for solo mining.     LOGGING   cgminer will log to stderr if it detects stderr is being redirected to a file.   To enable logging simply add 2&gt;logfile.txt to your command line and logfile.txt   will contain the logged output at the log level you specify (normal, verbose,   debug etc.)   In other words if you would normally use:   ./cgminer -o xxx -u yyy -p zzz   if you use   ./cgminer -o xxx -u yyy -p zzz 2&gt;logfile.txt   it will log to a file called logfile.txt and otherwise work the same.   There is also the -m option on linux which will spawn a command of your choice   and pipe the output directly to that command.   The WorkTime details ‘debug’ option adds details on the end of each line   displayed for Accepted or Rejected work done. An example would be:   &lt;-00000059.ed4834a3 M:X D:1.0 G:17:02:38:0.405 C:1.855 (2.995) W:3.440 (0.000) S:0.461 R:17:02:47   The first 2 hex codes are the previous block hash, the rest are reported in   seconds unless stated otherwise:   The previous hash is followed by the getwork mode used M:X where X is one of   P:Pool, T:Test Pool, L:LP or B:Benchmark,   then D:d.ddd is the difficulty required to get a share from the work,   then G:hh:mm:ss:n.nnn, which is when the getwork or LP was sent to the pool and   the n.nnn is how long it took to reply,   followed by ‘O’ on it’s own if it is an original getwork, or ‘C:n.nnn’ if it was   a clone with n.nnn stating how long after the work was recieved that it was cloned,   (m.mmm) is how long from when the original work was received until work started,   W:n.nnn is how long the work took to process until it was ready to submit,   (m.mmm) is how long from ready to submit to actually doing the submit, this is   usually 0.000 unless there was a problem with submitting the work,   S:n.nnn is how long it took to submit the completed work and await the reply,   R:hh:mm:ss is the actual time the work submit reply was received   If you start cgminer with the –sharelog option, you can get detailed   information for each share found. The argument to the option may be “-“ for   standard output (not advisable with the ncurses UI), any valid positive number   for that file descriptor, or a filename.   To log share data to a file named “share.log”, you can use either:   ./cgminer --sharelog 50 -o xxx -u yyy -p zzz 50&gt;share.log   ./cgminer --sharelog share.log -o xxx -u yyy -p zzz   For every share found, data will be logged in a CSV (Comma Separated Value)   format:   timestamp,disposition,target,pool,dev,thr,sharehash,sharedata   For example (this is wrapped, but it’s all on one line for real):   1335313090,reject,  ffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000,  http://localhost:8337,ASC0,0,  6f983c918f3299b58febf95ec4d0c7094ed634bc13754553ec34fc3800000000,  00000001a0980aff4ce4a96d53f4b89a2d5f0e765c978640fe24372a000001c5  000000004a4366808f81d44f26df3d69d7dc4b3473385930462d9ab707b50498  f681634a4f1f63d01a0cd43fb338000000000080000000000000000000000000  0000000000000000000000000000000000000000000000000000000080020000     BENCHMARK   The –benchmark option hashes a single fixed work item over and over and does   not submit shares to any pools.   The –benchfile  option hashes the work given in the file  supplied.   The format of the work file is:   version,merkleroot,prevhash,diffbits,noncetime   Any empty line or any line starting with ‘#’ or ‘/’ is ignored.   When it reaches the end of the file it continues back at the top.   The format of the data items matches the byte ordering and format of the   the bitcoind getblock RPC output.   An example file containing bitcoin block #1 would be:   Block 1   1,0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098,00000000001   9d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f,1d00ffff,1231469665   However, the work data should be one line without the linebreak in the middle   If you use –benchfile , then --benchfile-display will output a log line,   for each nonce found, showing the nonce value in decimal and hex and the work   used to find it in hex.     RPC API   For RPC API details see the API-README file     e.g.:   ./cgminer -o http://localhost:8332 -u user -p pass -o solo.ckpool.org:3333 -u 15qSxP1SQcUX3o4nhkfdbgyoWEFMomJ4rZ --decode     This code is provided entirely free of charge by the programmer in his spare   time so donations would be greatly appreciated. Please consider donating to the   address below. Driver development for new ASIC only bitcoin hardware can be   suitably sponsored.   Con Kolivas kernel@kolivas.org   ","categories": ["documentation"],
        "tags": ["CGMiner"],
        "url": "https://cgminer.info/documentation/setup/",
        "teaser": "https://cgminer.info/assets/images/thumbs/500x300.png"
      },{
        "title": "Download CGMiner  3.7.2 - AMD GPU Miner [2021]",
        "excerpt":" Get started with CGMiner  \t\t \t\t\t \t\tVersion: 3.7.2  \t\tFile: *cgminer.exe,    \t\tSHA256: 417b22681a716e2481fde1fcaed96d66a5716a188186a4ae765d558d4a7ec2f5  \t\t(Download for Linux)\t \t\t \t\t \t\t \t\t \t\tDownload Now (Windows x64) \t\t \t\t(mirror) \t\t \t     The new CGMiner stale version is ready.   Download   You can download CGMiner 3.7.2 from here:   Download Now   Download (mirror)   Inside the archive you will find a file README.txt with installation instructions.   Make sure to replace the pool and wallet address by what you’re using in all files.        ","categories": ["download"],
        "tags": ["CGMiner"],
        "url": "https://cgminer.info/download/3.7.2/",
        "teaser": "https://cgminer.info/assets/images/thumbs/500x300.png"
      },]
